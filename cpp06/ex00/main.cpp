#include "ScalarConverter.hpp"

void test() {
	std::string strings[] = {
		"A",
		"z",
		"!",
		" ",
		"}",
		"?",
		"-1",
		"0",
		"1",
		"-1.0",
		"0.0",
		"1.0",
		"-1f",
		"0f",
		"1f",
		"-1.1",
		"0.1",
		"1.1",
		"-127",
		"0.0000000001",
		"127",
		"32.002f",
		"33.000006",
		"36",
		"-2147483648",
		"-2147483649",
		"2147483647",
		"2147483648",
		"-340282346638528859811704183484516925440.000000f",
		"-3402823466385288598117041834845169254400.000000f",
		"6666666666.6666666666f",
		"340282346638528859811704183484516925440.000000f",
		"3402823466385288598117041834845169254400.000000f",
		"-179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000",
		"-1797693134862315708145274237317043567980705675258449965989174768031572607800285387605895586327668781715404589535143824642343213268894641827684675467035375169860499105765512820762454900903893289440758685084551339423045832369032229481658085593321233482747978262041447231687381771809192998812504040261841248583680.000000",
		"66666666666666666666.66666666666666666666",
		"179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000",
		"1797693134862315708145274237317043567980705675258449965989174768031572607800285387605895586327668781715404589535143824642343213268894641827684675467035375169860499105765512820762454900903893289440758685084551339423045832369032229481658085593321233482747978262041447231687381771809192998812504040261841248583680.000000",
		"inff",
		"-inff",
		"+inff",
		"nanf",
		"inf",
		"-inf",
		"+inf",
		"nan",
		""};
	std::cout << "RUNNING PREDEFINED TESTS\n";
	for (int i = 0; strings[i] != ""; i++) {
		std::cout << "\nTesting with: " << strings[i] << "\n";
		ScalarConverter::convert(strings[i]);
	}
	std::cout << "TESTS COMPLETED\n";
}

int main (int argc, char** argv) {
	std::string literal;

	if (argc != 2)
		test();
	else
		ScalarConverter::convert(argv[1]);
	return 0;
} 